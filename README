abckit - The ActionScript Byte Code assembler / disassembler in PLT Scheme

This is a set of tools to examine Adobe's ABC format file.

* Usage

asm.ss filename.sx

Asm.ss makes ABC file from ASM-form or ABC-form (described below). The
output file name is filename.sx.abc.

dump.ss [-abc] filename.abc

Dump.ss disassembles a abc file. The output is printed in stdout. If
-abc option is specified, ABC-form (described below) is chosen.

* File Format

There are two kinds of representation to describe a ABC file. You can
use either way depend on the purpose. Asm.ss accepts both format.

ASM-form : A (relatively) human friendly notation

$ ./dump.ss data/hello.sx.abc
(asm
 (ns_set ())
 (method
  (((signature
     ((return_type *) (param_type ()) (name "hello") (flags 0) (options ()) (param_names ())))
    (hint
     ((max_stack 2) (local_count 1) (init_scope_depth 0) (max_scope_depth 1)))
    (code
     ((0 getlocal 0)
      (2 pushscope)
      (3 findpropstrict ((package "") "print"))
      (5 pushstring "Hello, World!!")
      (7 callproperty ((package "") "print") 1)
      (10 returnvoid)))
    (trait ())
    (exception ()))))
 (instance ())
 (class ())
 (script (((init (method 0)) (trait ())))))

ABC-form : One-to-One translation to S-expression

$ ./dump.ss -abc data/hello.sx.abc
(abc
 (minor_version 16)
 (major_version 46)
 (constant_pool
  ((integer ())
   (uinteger ())
   (double ())
   (string ("hello" "" "print" "Hello, World!!"))
   (namespace ((package (string 2))))
   (ns_set ())
   (multiname (((namespace 1) (string 3))))))
 (method
  (((return_type (multiname 0))
    (param_type ())
    (name (string 1))
    (flags 0)
    (options ())
    (param_names ()))))
 (metadata ())
 (instance ())
 (class ())
 (script (((init (method 0)) (trait ()))))
 (method_body
  (((method 0)
    (max_stack 2)
    (local_count 1)
    (init_scope_depth 0)
    (max_scope_depth 1)
    (code
     ((0 getlocal 0)
      (2 pushscope)
      (3 findpropstrict (multiname 1))
      (5 pushstring (string 4))
      (7 callproperty (multiname 1) 1)
      (10 returnvoid)))
    (exception ())
    (trait ())))))
