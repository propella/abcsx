; -*- lisp -*-

;; This program was translated from Tamarin source tree.
;; ***** BEGIN LICENSE BLOCK *****
;; Version: MPL 1.1/GPL 2.0/LGPL 2.1

;; The contents of this file are subject to the Mozilla Public License Version
;; 1.1 (the "License"); you may not use this file except in compliance with
;; the License. You may obtain a copy of the License at
;; http://www.mozilla.org/MPL/

;; Software distributed under the License is distributed on an "AS IS" basis,
;; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;; for the specific language governing rights and limitations under the
;; License.

;; The Original Code is [Open Source Virtual Machine.].

;; The Initial Developer of the Original Code is
;; Adobe System Incorporated.
;; Portions created by the Initial Developer are Copyright (C) 2009
;; the Initial Developer. All Rights Reserved.

;; Contributor(s):
;;   Adobe AS3 Team

;; Alternatively, the contents of this file may be used under the terms of
;; either the GNU General Public License Version 2 or later (the "GPL"), or
;; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
;; in which case the provisions of the GPL or the LGPL are applicable instead
;; of those above. If you wish to allow use of your version of this file only
;; under the terms of either the GPL or the LGPL, and not to allow others to
;; use your version of this file under the terms of the MPL, indicate your
;; decision by deleting the provisions above and replace them with the notice
;; and other provisions required by the GPL or the LGPL. If you do not delete
;; the provisions above, a recipient may use your version of this file under
;; the terms of any one of the MPL, the GPL or the LGPL.

;; ***** END LICENSE BLOCK *****

(asm
 (ns_set ((ns_set (package ""))))
 (method
  (((signature
     ((return_type *) (param_type ()) (name "main") (flags 0) (options ()) (param_names ())))
;    (hint ((max_stack 5) (local_count 2) (init_scope_depth 0) (max_scope_depth 1)))
    (code
     ((0 getlocal_0)
      (1 pushscope)
      (2 findpropstrict ((ns_set 1) "print"))
      (4 setlocal_1)
      (5 pushstring "byte 9 + short 938=")
      (7 pushbyte 9)
      (9 pushshort 938)
      (12 add)
      (13 add)
      (14 getlocal_1)
      (15 swap)
      (16 callproperty ((ns_set 1) "print") 1)
      (19 pushstring "int 3652147 + uint 0x80000000=")
      (21 pushint 3652147)
      (23 pushuint 2147483648)
      (25 add)
      (26 add)
      (27 getlocal_1)
      (28 swap)
      (29 callproperty ((ns_set 1) "print") 1)
      (32 pushstring "9.391 / 3.2=")
      (34 pushdouble 9.391)
      (36 pushdouble 3.2)
      (38 divide)
      (39 add)
      (40 getlocal_1)
      (41 swap)
      (42 callproperty ((ns_set 1) "print") 1)
      (45 returnvoid)))
    (trait ())
    (exception ()))))
 (instance ())
 (class ())
 (script (((init (method 0)) (trait ())))))
